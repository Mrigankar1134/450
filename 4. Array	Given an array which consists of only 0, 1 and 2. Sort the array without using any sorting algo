
// Sort an array of 0s, 1s and 2s 

// Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.


// Example 1:

// Input: 
// N = 5
// arr[]= {0 2 1 2 0}
// Output:
// 0 0 1 2 2
// Explanation:
// 0s 1s and 2s are segregated 
// into ascending order.
// Example 2:

// Input: 
// N = 3
// arr[] = {0 1 0}
// Output:
// 0 0 1
// Explanation:
// 0s 1s and 2s are segregated 
// into ascending order.

// Your Task:
// You don't need to read input or print anything. Your task is to complete the function sort012() that takes an array arr and N as input parameters and sorts the array in-place.


// Expected Time Complexity: O(N)
// Expected Auxiliary Space: O(1)


// Constraints:
// 1 <= N <= 10^6
// 0 <= A[i] <= 2


/*********************************************************************/
//  Approach
//  We will be dividing the array into four parts...

//     zeroes      ones    unknown    twos   
//      0   0   1   1   1   ?   ?   2   2   2
//              |           |       |
//             low         mid     high

//  As the iteration will increase, we will try to make the unknown region small.
//  At first the value of low and mid will be 0 and high will be n-1.

//  Check value of arr[mid],
//  if 0, swap arr[low] and arr[mid], low++ and mid++
//  if 1, mid++
//  if 2, swap arr[mid] and arr[high], high--
//  Repeat these steps until mid<=high

// After completion the unknown region between mid and high will be removed


/*********************************************************************/
//  Code Starts here

#include<bits/stdc++.h>
using namespace std;

void swap(int arr[],int i,int j){
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
}

class Solution
{
    public:
    void sort012(int a[], int n)
    {
        int low=0,mid=0,high=n-1;
        while(mid<=high){
            if(a[mid]==0){
                swap(a,low,mid);
                low++;
                mid++;
            }
            else if(a[mid]==1){
                mid++;
            }
            else{
                swap(a,mid,high);
                high--;
            }
        }
    }
    
};


int main() {

    int t;
    cin >> t;

    while(t--){
        int n;
        cin >>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin >> a[i];
        }

        Solution ob;
        ob.sort012(a, n);

        for(int i=0;i<n;i++){
            cout << a[i]  << " ";
        }

        cout << endl;
        
        
    }
    return 0;
}
